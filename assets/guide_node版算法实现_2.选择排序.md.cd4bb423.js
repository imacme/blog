import{o as r,c as n,a as e}from"./app.38c9e000.js";const t='{"title":"C","description":"","frontmatter":{},"headers":[{"level":2,"title":"算法实现","slug":"算法实现"}],"relativePath":"guide\\\\node版算法实现\\\\2.选择排序.md","lastUpdated":1617446260501}',a={},o=e('<h1 id="c"><a class="header-anchor" href="#c" aria-hidden="true">#</a> C</h1><h2 id="算法实现"><a class="header-anchor" href="#算法实现" aria-hidden="true">#</a> 算法实现</h2><div class="language-"><pre><code>let unsortArray = [2, 6, 3, 1, 9, 8, 4, 5, 7]\n\nfunction bubbleSort (unsortArray) {\n  \n  if (!Array.isArray(unsortArray) || unsortArray.length &lt; 2) {\n    return unsortArray;\n  }\n  // write your code here\n\n  const length = unsortArray.length;\n  let prefixIndex = 0;\n  let lastIndex = prefixIndex + 1;\n\n  for (let indexOfOuter = 0; indexOfOuter &lt; length - 1; indexOfOuter++) {\n    prefixIndex = indexOfOuter;\n    lastIndex = prefixIndex + 1;\n    for (let i = indexOfOuter; i &gt;= 0; i--) {\n      if (unsortArray[lastIndex] &lt; unsortArray[i]) {\n        prefixIndex = i;\n      } else {\n        break;\n      }\n    }\n    [ unsortArray[prefixIndex], unsortArray[lastIndex] ] = [ unsortArray[lastIndex], unsortArray[prefixIndex] ];\n  }\n\n  return unsortArray\n}\nconsole.log(unsortArray)\nconsole.log(bubbleSort(unsortArray))\n</code></pre></div>',3);a.render=function(e,t,a,d,s,i){return r(),n("div",null,[o])};export default a;export{t as __pageData};
